name: Build the Python Application
on:
  workflow_dispatch:
    inputs:
      containerized:
        description: "Build a container version of the application"
        required: false
        type: boolean
        default: false
      publish:
        description: "Publish the package to PyPI"
        required: false
        type: boolean
        default: false
      python-version:
        description: "Python version to use"
        required: false
        type: choice
        options:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
        default: "3.13"
      run-tests:
        description: "Run tests before building the package"
        required: false
        type: boolean
        default: true

jobs:
  build-package:
    name: Build the Python Package
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      contents: read
    steps:
      - name: Workshop Initial Step
        run: |
          echo "Hello World!"
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install Dependencies
        working-directory: "./python"
        run: |
          pip install --upgrade pip
          pip install --upgrade poetry
          poetry install
      - name: Run Lint
        working-directory: "./python"
        continue-on-error: true
        run: |
          poetry run ruff check .
      - name: Fix Linter Findings
        working-directory: "./python"
        run: |
          poetry run ruff check --fix .
      - name: Run Tests
        working-directory: "./python"
        if: ${{ inputs.run-tests }}
        run: |
          poetry run test
      - name: Run Build
        working-directory: "./python"
        run: |
          poetry build
      - name: Upload Artifact to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: fastapi-poetry-deploy-example-package
          path: "python/dist/*"

  # build-container:
  #   name: Build the Python Container
  #   if: ${{ inputs.containerized }}
  #   uses: ./.github/workflows/build-container.yaml
  #   secrets:
  #     DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  #   with:
  #     publish: true
  #     python-version: ${{ inputs.python-version }}