name: Build the Python Container
on:
  workflow_call:
    inputs:
      publish:
        description: |
          Push the container image to Docker Hub.
          This should be set to true if you want to push the image.
        required: true
        type: boolean
        default: false
      python-version:
        description: |
          Python version to use for the container building process. Because we are using chainguard, this version should be the latest minor version of Python.
          At the time of writing the workflow, the version is 3.13. Link: https://images.chainguard.dev/directory/image/python/versions
        required: true
        type: string
    secrets:
      DOCKER_HUB_TOKEN:
        description: |
          Docker Hub token for pushing the container image.
          This token should have write access to the repository.
        required: true

jobs:
  build-container:
    name: Build the Python Container
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      contents: read
    steps:
      ## Set an Initial Step
      - name: Workshop Initial Step
        run: |
          echo "Hello World!"

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/fastapi-poetry-deploy-example
          tags: |
            type=raw,value=0.4.0
            type=raw,value=latest

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: "."
          file: "python/Dockerfile"
          push: ${{ inputs.publish }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=${{ runner.temp }}/fastapi-poetry-deploy-example.tar
          build-args:
            PYTHON_VERSION=${{ inputs.python-version }}

      - name: Save Image to Actions
        uses: actions/upload-artifact@v4
        with:
          name: fastapi-poetry-deploy-example
          path: ${{ runner.temp }}/fastapi-poetry-deploy-example.tar
